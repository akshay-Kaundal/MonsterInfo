{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../Services/data.service\";\nimport * as i2 from \"@angular/router\";\nexport class MonsterdetailComponent {\n  constructor(dataService, route) {\n    this.dataService = dataService;\n    this.route = route;\n    this.id = 0;\n    // = {\n    //   email: 'abc@emal',\n    //   id: 1,\n    //   name: 'dummy name',\n    //   username: 'dummy username',\n    // };\n    this.allMonsterInfo = [];\n    // this.monsterInfo = {\n    //   email: 'abc@emal',\n    //   id: 1,\n    //   name: 'dummy name',\n    //   username: 'dummy username',\n    // }\n    this.dataService.getData('users').subscribe(monsters => {\n      this.allMonsterInfo = monsters;\n    });\n    this.getMonsterData();\n  }\n  ngOnInit() {\n    // this.route.queryParams.subscribe(param => {\n    //   this.id = parseInt(param['id']!, 5)\n    // })\n    // this.route.paramMap.pipe(\n    //   switchMap((param: ParamMap)=> \n    //    this.idStr = param.get('id')!)\n    // );\n    this.route.paramMap.subscribe(res =>\n    // console.log(res)\n    this.idStr = res.get('id') || '');\n    console.log('this is Id', this.idStr);\n    this.id = parseInt(this.idStr);\n  }\n  getMonsterData() {\n    // this.dataService.getData('users').subscribe(monsters =>{\n    //   this.allMonsterInfo = monsters\n    // } );\n    // this.monsterInfo = this.allMonsterInfo.find((x: Monsterdetail) => {\n    //   return x.id === 1;\n    // });\n    console.log(this.id);\n    this.monsterInfo = this.allMonsterInfo.find(x => x.id === this.id) || {\n      email: 'abc@emal',\n      id: 1,\n      name: 'dummy name',\n      username: 'dummy username'\n    };\n  }\n}\nMonsterdetailComponent.ɵfac = function MonsterdetailComponent_Factory(t) {\n  return new (t || MonsterdetailComponent)(i0.ɵɵdirectiveInject(i1.DataService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nMonsterdetailComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: MonsterdetailComponent,\n  selectors: [[\"app-monsterdetail\"]],\n  decls: 43,\n  vars: 4,\n  template: function MonsterdetailComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"Monster Details\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"table\")(3, \"tr\")(4, \"td\");\n      i0.ɵɵtext(5, \"Id\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"td\");\n      i0.ɵɵtext(7);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"tr\")(9, \"td\");\n      i0.ɵɵtext(10, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"td\");\n      i0.ɵɵtext(12);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"tr\")(14, \"td\");\n      i0.ɵɵtext(15, \"UserName\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"td\");\n      i0.ɵɵtext(17);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(18, \"tr\")(19, \"td\");\n      i0.ɵɵtext(20, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"td\");\n      i0.ɵɵtext(22);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(23, \"tr\")(24, \"td\");\n      i0.ɵɵtext(25, \"Address\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"td\");\n      i0.ɵɵtext(27, \"abc\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(28, \"tr\")(29, \"td\");\n      i0.ɵɵtext(30, \"Phone\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(31, \"td\");\n      i0.ɵɵtext(32, \"123\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(33, \"tr\")(34, \"td\");\n      i0.ɵɵtext(35, \"Website\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(36, \"td\");\n      i0.ɵɵtext(37, \"abc\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(38, \"tr\")(39, \"td\");\n      i0.ɵɵtext(40, \"Company\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(41, \"td\");\n      i0.ɵɵtext(42, \"abc\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵtextInterpolate(ctx.monsterInfo.id);\n      i0.ɵɵadvance(5);\n      i0.ɵɵtextInterpolate(ctx.monsterInfo.name);\n      i0.ɵɵadvance(5);\n      i0.ɵɵtextInterpolate(ctx.monsterInfo.username);\n      i0.ɵɵadvance(5);\n      i0.ɵɵtextInterpolate(ctx.monsterInfo.email);\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;AAWA,OAAM,MAAOA,sBAAsB;EAajCC,YAAoBC,WAAwB,EAClCC,KAAqB;IADX,gBAAW,GAAXD,WAAW;IACrB,UAAK,GAALC,KAAK;IAZf,OAAE,GAAW,CAAC;IAEd;IACA;IACA;IACA;IACA;IACA;IACA,mBAAc,GAAoB,EAAE;IAMlC;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,CAACD,WAAW,CAACE,OAAO,CAAC,OAAO,CAAC,CAACC,SAAS,CAACC,QAAQ,IAAG;MACrD,IAAI,CAACC,cAAc,GAAGD,QAAQ;IAChC,CAAC,CAAE;IACH,IAAI,CAACE,cAAc,EAAE;EACvB;EAEAC,QAAQ;IACN;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,CAACN,KAAK,CAACO,QAAQ,CAACL,SAAS,CAACM,GAAG;IAC/B;IACA,IAAI,CAACC,KAAK,GAAGD,GAAG,CAACE,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,CAC/B;IACHC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAC,IAAI,CAACH,KAAK,CAAC;IACpC,IAAI,CAACI,EAAE,GAAGC,QAAQ,CAAC,IAAI,CAACL,KAAK,CAAC;EAChC;EAEAJ,cAAc;IACZ;IACA;IACA;IAEA;IACA;IACA;IACAM,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,EAAE,CAAC;IACpB,IAAI,CAACE,WAAW,GAAG,IAAI,CAACX,cAAc,CAACY,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACJ,EAAE,KAAK,IAAI,CAACA,EAAE,CAAC,IAAI;MAClEK,KAAK,EAAE,UAAU;MACjBL,EAAE,EAAE,CAAC;MACLM,IAAI,EAAE,YAAY;MAClBC,QAAQ,EAAE;KACX;EACL;;AA3DWvB,sBAAsB;mBAAtBA,sBAAsB;AAAA;AAAtBA,sBAAsB;QAAtBA,sBAAsB;EAAAwB;EAAAC;EAAAC;EAAAC;IAAA;MCXnCC,0BAAI;MAAAA,+BAAe;MAAAA,iBAAK;MACxBA,6BAAO;MAEKA,kBAAE;MAAAA,iBAAK;MACXA,0BAAI;MAAAA,YAAkB;MAAAA,iBAAK;MAE/BA,0BAAI;MACIA,qBAAI;MAAAA,iBAAK;MACbA,2BAAI;MAAAA,aAAoB;MAAAA,iBAAK;MAEjCA,2BAAI;MACIA,yBAAQ;MAAAA,iBAAK;MACjBA,2BAAI;MAAAA,aAAwB;MAAAA,iBAAK;MAErCA,2BAAI;MACIA,sBAAK;MAAAA,iBAAK;MACdA,2BAAI;MAAAA,aAAqB;MAAAA,iBAAK;MAElCA,2BAAI;MACIA,wBAAO;MAAAA,iBAAK;MAChBA,2BAAI;MAAAA,oBAAG;MAAAA,iBAAK;MAEhBA,2BAAI;MACIA,sBAAK;MAAAA,iBAAK;MACdA,2BAAI;MAAAA,oBAAG;MAAAA,iBAAK;MAEhBA,2BAAI;MACIA,wBAAO;MAAAA,iBAAK;MAChBA,2BAAI;MAAAA,oBAAG;MAAAA,iBAAK;MAEhBA,2BAAI;MACIA,wBAAO;MAAAA,iBAAK;MAChBA,2BAAI;MAAAA,oBAAG;MAAAA,iBAAK;;;MA5BRA,eAAkB;MAAlBA,wCAAkB;MAIlBA,eAAoB;MAApBA,0CAAoB;MAIpBA,eAAwB;MAAxBA,8CAAwB;MAIxBA,eAAqB;MAArBA,2CAAqB","names":["MonsterdetailComponent","constructor","dataService","route","getData","subscribe","monsters","allMonsterInfo","getMonsterData","ngOnInit","paramMap","res","idStr","get","console","log","id","parseInt","monsterInfo","find","x","email","name","username","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["D:\\Tech Docs\\Nagarro Learning\\Angular\\Practice\\Project\\monster_info\\src\\app\\monsterdetail\\monsterdetail.component.ts","D:\\Tech Docs\\Nagarro Learning\\Angular\\Practice\\Project\\monster_info\\src\\app\\monsterdetail\\monsterdetail.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { switchMap } from 'rxjs';\nimport { Monsterdetail } from '../Model/monsterdetail';\nimport { DataService } from '../Services/data.service';\n\n@Component({\n  selector: 'app-monsterdetail',\n  templateUrl: './monsterdetail.component.html',\n  styleUrls: ['./monsterdetail.component.css']\n})\nexport class MonsterdetailComponent implements OnInit {\n  monsterInfo: Monsterdetail;\n  id: number = 0;\n  idStr: string;\n  // = {\n  //   email: 'abc@emal',\n  //   id: 1,\n  //   name: 'dummy name',\n  //   username: 'dummy username',\n  // };\n  allMonsterInfo: Monsterdetail[] = [];\n  check: any;\n  \n  constructor(private dataService: DataService,\n    private route: ActivatedRoute)\n  {\n    // this.monsterInfo = {\n    //   email: 'abc@emal',\n    //   id: 1,\n    //   name: 'dummy name',\n    //   username: 'dummy username',\n    // }\n    this.dataService.getData('users').subscribe(monsters =>{\n      this.allMonsterInfo = monsters\n    } );\n    this.getMonsterData();\n  }\n\n  ngOnInit(): void {\n    // this.route.queryParams.subscribe(param => {\n    //   this.id = parseInt(param['id']!, 5)\n    // })\n    // this.route.paramMap.pipe(\n    //   switchMap((param: ParamMap)=> \n    //    this.idStr = param.get('id')!)\n    // );\n    this.route.paramMap.subscribe(res => \n      // console.log(res)\n      this.idStr = res.get('id') || ''\n      );\n    console.log('this is Id',this.idStr);\n    this.id = parseInt(this.idStr); \n  }\n\n  getMonsterData(){\n    // this.dataService.getData('users').subscribe(monsters =>{\n    //   this.allMonsterInfo = monsters\n    // } );\n\n    // this.monsterInfo = this.allMonsterInfo.find((x: Monsterdetail) => {\n    //   return x.id === 1;\n    // });\n    console.log(this.id)\n    this.monsterInfo = this.allMonsterInfo.find(x => x.id === this.id) || {\n        email: 'abc@emal',\n        id: 1,\n        name: 'dummy name',\n        username: 'dummy username',\n      }\n  }\n}\n","<h1>Monster Details</h1>\n<table>\n    <tr>\n        <td>Id</td>\n        <td>{{monsterInfo.id}}</td>\n    </tr>\n    <tr>\n        <td>Name</td>\n        <td>{{monsterInfo.name}}</td>\n    </tr>\n    <tr>\n        <td>UserName</td>\n        <td>{{monsterInfo.username}}</td>\n    </tr>\n    <tr>\n        <td>Email</td>\n        <td>{{monsterInfo.email}}</td>\n    </tr>\n    <tr>\n        <td>Address</td>\n        <td>abc</td>\n    </tr>\n    <tr>\n        <td>Phone</td>\n        <td>123</td>\n    </tr>\n    <tr>\n        <td>Website</td>\n        <td>abc</td>\n    </tr>\n    <tr>\n        <td>Company</td>\n        <td>abc</td>\n    </tr>\n</table>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}