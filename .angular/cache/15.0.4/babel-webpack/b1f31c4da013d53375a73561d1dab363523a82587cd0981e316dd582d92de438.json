{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nfunction AddmonsterComponent_td_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1, \"Please Enter Name\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddmonsterComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Please enter username\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddmonsterComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵtext(1, \"Please Enter Valid email Id\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class AddmonsterComponent {\n  constructor(formBuilder) {\n    this.formBuilder = formBuilder;\n    this.createMonsterDetailForm();\n  }\n  createMonsterDetailForm() {\n    this.addMonsterForm = new FormGroup({\n      name: new FormControl(\"Dummy Monster Name\", [Validators.required]),\n      userName: new FormControl(\"dummy user name\", [Validators.required]),\n      email: new FormControl(\"dummy email\", [Validators.email])\n    });\n  }\n  addMonsterDetail() {\n    if (this.addMonsterForm.valid) {\n      alert('Submiting your form');\n    } else {\n      alert('Form is not valid');\n    }\n  }\n}\nAddmonsterComponent.ɵfac = function AddmonsterComponent_Factory(t) {\n  return new (t || AddmonsterComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n};\nAddmonsterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AddmonsterComponent,\n  selectors: [[\"app-addmonster\"]],\n  decls: 15,\n  vars: 4,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [\"type\", \"text\", \"name\", \"name\", \"placeholder\", \"Your Name\", \"formControlName\", \"name\"], [4, \"ngIf\"], [\"type\", \"text\", \"name\", \"userName\", \"placeholder\", \"Your username\", \"formControlName\", \"userName\"], [\"type\", \"text\", \"name\", \"email\", \"placeholder\", \"Your Email\", \"formControlName\", \"email\"], [\"class\", \"error-msg\", 4, \"ngIf\"], [\"type\", \"submit\", \"value\", \"Send\"], [1, \"error-msg\"]],\n  template: function AddmonsterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h3\");\n      i0.ɵɵtext(1, \"\\u00C0dd Monster\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function AddmonsterComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.addMonsterDetail();\n      });\n      i0.ɵɵelementStart(3, \"table\")(4, \"tr\")(5, \"td\");\n      i0.ɵɵtext(6, \"Name: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"td\");\n      i0.ɵɵelement(8, \"input\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(9, AddmonsterComponent_td_9_Template, 2, 0, \"td\", 2);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(10, \"input\", 3);\n      i0.ɵɵtemplate(11, AddmonsterComponent_div_11_Template, 2, 0, \"div\", 2);\n      i0.ɵɵelement(12, \"input\", 4);\n      i0.ɵɵtemplate(13, AddmonsterComponent_div_13_Template, 2, 0, \"div\", 5);\n      i0.ɵɵelement(14, \"input\", 6);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.addMonsterForm);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngIf\", ctx.addMonsterForm.controls[\"name\"].invalid);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.addMonsterForm.controls[\"userName\"].invalid);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.addMonsterForm.controls[\"email\"].invalid && ctx.addMonsterForm.controls[\"email\"].touched);\n    }\n  },\n  dependencies: [i2.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAAsBA,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;;;;;;ICKpEC,0BAAoD;IAAAA,iCAAiB;IAAAA,iBAAK;;;;;IAMlFA,2BAAyD;IAAAA,qCAAqB;IAAAA,iBAAM;;;;;IAEpFA,8BACkB;IAAAA,2CAA2B;IAAAA,iBAAM;;;ADPvD,OAAM,MAAOC,mBAAmB;EAG9BC,YAAoBC,WAAwB;IAAxB,gBAAW,GAAXA,WAAW;IAC7B,IAAI,CAACC,uBAAuB,EAAE;EAChC;EAEAA,uBAAuB;IACrB,IAAI,CAACC,cAAc,GAAG,IAAIP,SAAS,CAAC;MAClCQ,IAAI,EAAE,IAAIT,WAAW,CAAC,oBAAoB,EAAE,CAACE,UAAU,CAACQ,QAAQ,CAAC,CAAC;MAClEC,QAAQ,EAAE,IAAIX,WAAW,CAAC,iBAAiB,EAAE,CAACE,UAAU,CAACQ,QAAQ,CAAC,CAAC;MACnEE,KAAK,EAAE,IAAIZ,WAAW,CAAC,aAAa,EAAE,CAACE,UAAU,CAACU,KAAK,CAAC;KACzD,CAAC;EACJ;EAEAC,gBAAgB;IACd,IAAG,IAAI,CAACL,cAAc,CAACM,KAAK,EAAC;MAC3BC,KAAK,CAAC,qBAAqB,CAAC;KAC7B,MAAM;MACLA,KAAK,CAAC,mBAAmB,CAAC;;EAE9B;;AArBWX,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;QAAnBA,mBAAmB;EAAAY;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCRhCjB,0BAAI;MAAAA,gCAAW;MAAAA,iBAAK;MACpBA,+BAAmE;MAAhCA;QAAA,OAAYkB,sBAAkB;MAAA,EAAC;MAC9DlB,6BAAO;MAEKA,sBAAM;MAAAA,iBAAK;MACfA,0BAAI;MAAAA,2BAA8E;MAAAA,iBAAK;MACvFA,kEAA0E;MAC9EA,iBAAK;MAITA,4BAA0F;MAC1FA,sEAAoF;MACpFA,4BAAiF;MACjFA,sEACmD;MACnDA,4BAAkC;MACtCA,iBAAO;;;MAhBDA,eAA4B;MAA5BA,8CAA4B;MAKjBA,eAA6C;MAA7CA,kEAA6C;MAMpDA,eAAiD;MAAjDA,sEAAiD;MAEjDA,eAA0F;MAA1FA,mHAA0F","names":["FormControl","FormGroup","Validators","i0","AddmonsterComponent","constructor","formBuilder","createMonsterDetailForm","addMonsterForm","name","required","userName","email","addMonsterDetail","valid","alert","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\Tech Docs\\Nagarro Learning\\Angular\\Practice\\Project\\monster_info\\src\\app\\addmonster\\addmonster.component.ts","D:\\Tech Docs\\Nagarro Learning\\Angular\\Practice\\Project\\monster_info\\src\\app\\addmonster\\addmonster.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-addmonster',\n  templateUrl: './addmonster.component.html',\n  styleUrls: ['./addmonster.component.css']\n})\nexport class AddmonsterComponent {\n  addMonsterForm: any;\n\n  constructor(private formBuilder: FormBuilder){\n    this.createMonsterDetailForm();\n  }\n\n  createMonsterDetailForm(){\n    this.addMonsterForm = new FormGroup({\n      name: new FormControl(\"Dummy Monster Name\", [Validators.required]),\n      userName: new FormControl(\"dummy user name\", [Validators.required]),\n      email: new FormControl(\"dummy email\", [Validators.email])\n    })\n  };\n\n  addMonsterDetail(){\n    if(this.addMonsterForm.valid){\n      alert('Submiting your form');\n    } else {\n      alert('Form is not valid');\n    }\n  }\n}\n","<h3>Àdd Monster</h3>\n<form [formGroup]=\"addMonsterForm\" (ngSubmit)=\"addMonsterDetail()\">\n    <table>\n        <tr>\n            <td>Name: </td>\n            <td><input type=\"text\" name=\"name\" placeholder=\"Your Name\" formControlName=\"name\"></td>\n            <td *ngIf=\"addMonsterForm.controls['name'].invalid\">Please Enter Name</td>\n        </tr>\n    </table>\n    \n    \n    <input type=\"text\" name=\"userName\" placeholder=\"Your username\" formControlName=\"userName\">\n    <div *ngIf=\"addMonsterForm.controls['userName'].invalid\">Please enter username</div>\n    <input type=\"text\" name=\"email\" placeholder=\"Your Email\" formControlName=\"email\">\n    <div *ngIf=\"addMonsterForm.controls['email'].invalid && addMonsterForm.controls['email'].touched\" \n    class=\"error-msg\">Please Enter Valid email Id</div> \n    <input type=\"submit\" value=\"Send\">\n</form>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}