{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst Base_Url = \"https://jsonplaceholder.typicode.com\";\nconst Base_Image_Url = \"https://robohash.org/\";\nexport class DataService {\n  constructor(http) {\n    this.http = http;\n  }\n  getData(url) {\n    return this.http.get(`${Base_Url}/${url}`);\n  }\n  getImage(id) {\n    return this.http.get(`${Base_Image_Url}${id}?set=set2&size=180x180`);\n  }\n}\nDataService.ɵfac = function DataService_Factory(t) {\n  return new (t || DataService)(i0.ɵɵinject(i1.HttpClient));\n};\nDataService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: DataService,\n  factory: DataService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAIA,MAAMA,QAAQ,GAAG,sCAAsC;AACvD,MAAMC,cAAc,GAAC,uBAAuB;AAK5C,OAAM,MAAOC,WAAW;EAEtBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAgB;EAExCC,OAAO,CAACC,GAAW;IACjB,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAC,GAAGP,QAAQ,IAAIM,GAAG,EAAE,CAAC;EAC5C;EAEAE,QAAQ,CAACC,EAAU;IACjB,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAAC,GAAGN,cAAc,GAAGQ,EAAE,wBAAwB,CAAC;EACtE;;AAVWP,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAQ,SAAXR,WAAW;EAAAS,YAFV;AAAM","names":["Base_Url","Base_Image_Url","DataService","constructor","http","getData","url","get","getImage","id","factory","providedIn"],"sourceRoot":"","sources":["D:\\Tech Docs\\Nagarro Learning\\Angular\\Practice\\Project\\monster_info\\src\\app\\Services\\data.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nconst Base_Url = \"https://jsonplaceholder.typicode.com\";\nconst Base_Image_Url=\"https://robohash.org/\"\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  constructor(private http: HttpClient) { }\n\n  getData(url: string): Observable<any>{\n    return this.http.get(`${Base_Url}/${url}`);\n  }\n\n  getImage(id: number):Observable<any>{\n    return this.http.get(`${Base_Image_Url}${id}?set=set2&size=180x180`);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}