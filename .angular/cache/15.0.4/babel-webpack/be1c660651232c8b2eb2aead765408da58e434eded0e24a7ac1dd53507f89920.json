{"ast":null,"code":"import { Subscription } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../Services/data.service\";\nimport * as i2 from \"@angular/platform-browser\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"../Filters/loweremail.pipe\";\nconst _c0 = function (a1) {\n  return [\"/detail\", a1];\n};\nexport class MonstercardComponent {\n  constructor(dataService, sanitizer) {\n    this.dataService = dataService;\n    this.sanitizer = sanitizer;\n    this.subs = new Subscription();\n    // this.detail = {\n    //   email: 'abc@emal',\n    //   id: 1,\n    //   name: 'dummy name',\n    //   username: 'dummy username',\n    //   // address: {}\n    // }\n  }\n\n  ngOnInit() {\n    // console.log('this is card id', this.detail.id) \n    // this.image = this.dataService.getImage(this.detail.id);\n    // this.subs.add(\n    //   this.dataService.getImage(this.detail.id).subscribe(monsterImage => {\n    //     console.log('Prinitng Image');\n    //     console.log(monsterImage);\n    //     this.safeImage = this.sanitizer.bypassSecurityTrustUrl(monsterImage);\n    //     console.log(this.safeImage);\n    //   })\n    // )\n    this.dataService.getImage(this.detail.id).subscribe(data => {\n      this.createImageFromBlob(data);\n    });\n  }\n  createImageFromBlob(image) {\n    let reader = new FileReader();\n    reader.addEventListener(\"load\", () => {\n      this.imageToShow = reader.result;\n    }, false);\n    if (image) {\n      reader.readAsDataURL(image);\n    }\n  }\n}\nMonstercardComponent.ɵfac = function MonstercardComponent_Factory(t) {\n  return new (t || MonstercardComponent)(i0.ɵɵdirectiveInject(i1.DataService), i0.ɵɵdirectiveInject(i2.DomSanitizer));\n};\nMonstercardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: MonstercardComponent,\n  selectors: [[\"app-monstercard\"]],\n  inputs: {\n    detail: \"detail\"\n  },\n  decls: 7,\n  vars: 8,\n  consts: [[\"routerLinkActive\", \"active\", \"ariaCurrentWhenActive\", \"page\", 3, \"routerLink\"], [3, \"src\"]],\n  template: function MonstercardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"a\", 0);\n      i0.ɵɵelement(2, \"img\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(3);\n      i0.ɵɵelement(4, \"br\");\n      i0.ɵɵtext(5);\n      i0.ɵɵpipe(6, \"loweremail\");\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(6, _c0, ctx.detail.id));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"src\", ctx.imageToShow, i0.ɵɵsanitizeUrl);\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\" \", ctx.detail.name, \" \");\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(6, 4, ctx.detail.email), \"\\n\");\n    }\n  },\n  dependencies: [i3.RouterLink, i3.RouterLinkActive, i4.LoweremailPipe],\n  styles: [\"div[_ngcontent-%COMP%] {\\r\\n    height: 220px;\\r\\n    width: 200px;\\r\\n    background-color: teal;\\r\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbW9uc3RlcmNhcmQvbW9uc3RlcmNhcmQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGFBQWE7SUFDYixZQUFZO0lBQ1osc0JBQXNCO0VBQ3hCIiwic291cmNlc0NvbnRlbnQiOlsiZGl2IHtcclxuICAgIGhlaWdodDogMjIwcHg7XHJcbiAgICB3aWR0aDogMjAwcHg7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0ZWFsO1xyXG4gIH0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"AAGA,SAASA,YAAY,QAAQ,MAAM;;;;;;;;;AASnC,OAAM,MAAOC,oBAAoB;EAO/BC,YAAoBC,WAAwB,EAAUC,SAAuB;IAAzD,gBAAW,GAAXD,WAAW;IAAuB,cAAS,GAATC,SAAS;IAJ/D,SAAI,GAAG,IAAIJ,YAAY,EAAE;IAMvB;IACA;IACA;IACA;IACA;IACA;IACA;EACF;;EAEAK,QAAQ;IACN;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA,IAAI,CAACF,WAAW,CAACG,QAAQ,CAAC,IAAI,CAACC,MAAM,CAACC,EAAE,CAAC,CAACC,SAAS,CAACC,IAAI,IAAG;MACvD,IAAI,CAACC,mBAAmB,CAACD,IAAI,CAAC;IAChC,CAAC,CAAC;EACN;EAEAC,mBAAmB,CAACC,KAAW;IAC7B,IAAIC,MAAM,GAAG,IAAIC,UAAU,EAAE;IAC7BD,MAAM,CAACE,gBAAgB,CAAC,MAAM,EAAE,MAAK;MACnC,IAAI,CAACC,WAAW,GAAGH,MAAM,CAACI,MAAM;IAClC,CAAC,EAAE,KAAK,CAAC;IAET,IAAGL,KAAK,EAAC;MACPC,MAAM,CAACK,aAAa,CAACN,KAAK,CAAC;;EAG/B;;AA7CWX,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAAkB;EAAAC;IAAAb;EAAA;EAAAc;EAAAC;EAAAC;EAAAC;IAAA;MCX7BC,2BAAK;MAC8FA,yBAA0B;MAAAA,iBAAI;MAG7HA,YACA;MAAAA,qBAAI;MACJA,YACR;;MAAAA,iBAAM;;;MANKA,eAAoC;MAApCA,sEAAoC;MAA6DA,eAAmB;MAAnBA,uDAAmB;MAGvHA,eACA;MADAA,gDACA;MACAA,eACR;MADQA,wEACR","names":["Subscription","MonstercardComponent","constructor","dataService","sanitizer","ngOnInit","getImage","detail","id","subscribe","data","createImageFromBlob","image","reader","FileReader","addEventListener","imageToShow","result","readAsDataURL","selectors","inputs","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["D:\\Tech Docs\\Nagarro Learning\\Angular\\Practice\\Project\\Git_Monster\\MonsterInfo\\src\\app\\monstercard\\monstercard.component.ts","D:\\Tech Docs\\Nagarro Learning\\Angular\\Practice\\Project\\Git_Monster\\MonsterInfo\\src\\app\\monstercard\\monstercard.component.html"],"sourcesContent":["import { ReadVarExpr } from '@angular/compiler';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { DomSanitizer, SafeUrl } from '@angular/platform-browser';\nimport { Subscription } from 'rxjs';\nimport { Monsterdetail } from '../Model/monsterdetail';\nimport { DataService } from '../Services/data.service';\n\n@Component({\n  selector: 'app-monstercard',\n  templateUrl: './monstercard.component.html',\n  styleUrls: ['./monstercard.component.css']\n})\nexport class MonstercardComponent implements OnInit {\n  @Input() detail: Monsterdetail;\n  image: any;\n  subs = new Subscription();\n  safeImage: SafeUrl;\n  imageToShow : any;\n\n  constructor(private dataService: DataService, private sanitizer: DomSanitizer)\n  {\n    // this.detail = {\n    //   email: 'abc@emal',\n    //   id: 1,\n    //   name: 'dummy name',\n    //   username: 'dummy username',\n    //   // address: {}\n    // }\n  }\n\n  ngOnInit(){\n    // console.log('this is card id', this.detail.id) \n    // this.image = this.dataService.getImage(this.detail.id);\n    // this.subs.add(\n    //   this.dataService.getImage(this.detail.id).subscribe(monsterImage => {\n    //     console.log('Prinitng Image');\n    //     console.log(monsterImage);\n        \n    //     this.safeImage = this.sanitizer.bypassSecurityTrustUrl(monsterImage);\n    //     console.log(this.safeImage);\n    //   })\n    // )\n    this.dataService.getImage(this.detail.id).subscribe(data =>{\n        this.createImageFromBlob(data)\n      })\n  }\n\n  createImageFromBlob(image: Blob){\n    let reader = new FileReader();\n    reader.addEventListener(\"load\", () => {\n      this.imageToShow = reader.result;\n    }, false);\n    \n    if(image){\n      reader.readAsDataURL(image);\n    }\n\n  }\n\n\n}\n","<!-- <div style=\"background-color: teal;\"> -->\n    <div>\n        <a [routerLink]=\"['/detail',detail.id]\" routerLinkActive=\"active\" ariaCurrentWhenActive=\"page\"><img [src]=\"imageToShow\"/></a>\n    \n\n        {{detail.name}}\n        <br>\n        {{detail.email |loweremail}}\n</div>\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}